version: '3.9'

services:

  gateway:
    build: 
      context: ./gateway
    command: "npm run start"
    ports:
      - "80:80"
    mem_limit: 512m
    cpus: 0.5
    depends_on:
      - api
      - pages
      - redirect
    environment:
      - NODE_ENV=production
      - REDIRECT_PORT=3002
      - API_PORT=3001
      - FRONTEND_PORT=3003
      - PORT=80

  
  api:
    build: 
      context: ./backend/api
    command: "npm run start"
    expose:
      - "3001:3001"
    mem_limit: 1g
    cpus: 1
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - PORT=3001
      - SECRET=${SECRET}
      - SECRET_COOKIE=${SECRET_COOKIE}

  migrate:
    build:
      context: ./backend/migrate
    command: sh -c "npx wait-on tcp:postgres:5432 && npx prisma migrate dev --name init"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=${DATABASE_URL}


  pages:
    build:
      context: .
      dockerfile: backend/pages/Dockerfile
    command: "npm run start"
    expose:
      - "3003:3003"
    mem_limit: 512m
    cpus: 0.5
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - PORT=3003
      - SECRET=${SECRET}
      - SECRET_COOKIE=${SECRET_COOKIE}


  redirect:
    build: 
      context: ./backend/redirect
    command: "npm run start"
    expose:
      - "3002:3002"
    mem_limit: 512m
    cpus: 0.5
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - PORT=3002


  postgres:
    image: postgres:15
    restart: always
    mem_limit: 1g
    cpus: 1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data


volumes:
  pgdata:
