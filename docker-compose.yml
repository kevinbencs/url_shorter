version: '3.9'

services:

  gateway:
    build: 
      context: ./gateway
    command: "npm run start"
    ports:
      - "3000:3000"
    depends_on:
      - api
      - pages
      - redirect
    environment:
      - NODE_ENV=production
      - REDIRECT_PORT=3002
      - API_PORT=3001
      - FRONTEND_PORT=3003
      - PORT=3000
      


  api:
    build: 
      context: ./backend/api
    command: sh -c "npx prisma generate && ./wait-for-it.sh postgres:5432 -- npx prisma migrate deploy && npm start_pages"
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@postgres:5432/mydb
      - REDIRECT_PORT=3002
      - API_PORT=3001
      - FRONTEND_PORT=3003
      - SECRET=asdfjisdjgdsgvbfdogj
      - SECRET_COOKIE=efsef

  pages:
    build:
      context: .
      dockerfile: backend/pages/Dockerfile
    command: "npm run start"
    ports:
      - "3003:3003"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@postgres:5432/mydb
      - REDIRECT_PORT=3002
      - API_PORT=3001
      - FRONTEND_PORT=3003
      - SECRET=asdfjisdjgdsgvbfdogj
      - SECRET_COOKIE=efsef

  redirect:
    build: 
      context: ./backend/redirect
    command: "npm run start"
    ports:
      - "3002:3002"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@postgres:5432/mydb
      - REDIRECT_PORT=3002
      - API_PORT=3001
      - FRONTEND_PORT=3003
      - SECRET=asdfjisdjgdsgvbfdogj
      - SECRET_COOKIE=efsef

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data


volumes:
  pgdata:
